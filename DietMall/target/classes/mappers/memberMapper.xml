<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">

	<!-- 카카오 -->
	<!-- 아이디 중복 체크 - 카카오 -->
	<select id="idChkKakao" resultType="int">
		SELECT COUNT(*) FROM MP_MEMBER
		WHERE KAKAOID = #{kakaoId}
	</select>

	<!-- 일반 회원가입 -->
	<insert id="join">
		INSERT INTO MP_MEMBER(
		USERID
		, KAKAOID
		, USERPASS
		, USERNAME
		, USERBIRTH
		, USERGENDER
		, USEREMAIL
		, USERTEL )
		VALUES(
		#{userId}
		, #{kakaoId}
		, #{userPass}
		, #{userName}
		, #{userBirth}
		, #{userGender}
		, #{userEmail}
		, #{userTel}
		)

	</insert>

	<!-- 아이디로 회원정보 불러오기 -->
	<select id="load_MemberDTO" resultType="com.dietmall.DTO.MemberDTO">
		SELECT USERID
		, KAKAOID
		, USERPASS
		, USERNAME
		, USERBIRTH
		, USERGENDER
		, USEREMAIL
		, USERTEL
		FROM MP_MEMBER
		WHERE USERID = #{userId}
	</select>

	<!-- 검사 -->
	<!-- 패스워드 체크 -->
	<select id="passChk" resultType="int">
		SELECT COUNT(*) FROM MP_MEMBER
		WHERE USERID = #{userId}
		AND USERPASS = #{userPass}
	</select>

	<!-- 아이디 중복 체크 -->
	<select id="idChk" resultType="int">
		SELECT COUNT(*) FROM MP_MEMBER
		WHERE USERID = #{userId}
	</select>
	
	<!-- 이메일 중복 체크 -->
	<select id="emailChk" resultType="int">
		SELECT COUNT(*) FROM MP_MEMBER
		WHERE USEREMAIL = #{userEmail}
	</select>
	
	<!-- 아이디/비밀번호 찾기 -->
	<!-- 아이디 찾기 -->
	<!-- 실명, 이메일 동일 회원 여부 -->
	<select id="findidChk_same" resultType="int">
		SELECT COUNT(*) FROM MP_MEMBER
		WHERE USERNAME = #{userName}
		AND USEREMAIL = #{userEmail}
	</select>

	<!-- 아이디 값 가져오기 -->
	<select id="findidChk_id" resultType="String">
		SELECT USERID
		FROM MP_MEMBER
		WHERE USERNAME = #{userName}
		AND USEREMAIL = #{userEmail}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<!-- 아이디 값으로 이메일 찾기 -->
	<select id="findpwChk_email" resultType="String">
		SELECT USEREMAIL
		FROM MP_MEMBER
		WHERE USERID = #{userId}
	</select>
	
	<!-- 아이디와 일치하는 비밀번호 가져오기 -->
	<update id="update_MemberDTO">
		UPDATE MP_MEMBER
		SET
		USERID = #{userId}
		, KAKAOID = #{kakaoId}
		, USERPASS = #{userPass}
		, USERNAME = #{userName}
		, USERBIRTH = #{userBirth}
		, USERGENDER = #{userGender}
		, USEREMAIL = #{userEmail}
		, USERTEL = #{userTel}
		WHERE USERID = #{userId}
	</update>
	
</mapper>